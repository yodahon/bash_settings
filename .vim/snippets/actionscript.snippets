# package
snippet package
	package${1: PackageName}
	{
		public class ${2:className}
		{
			public function $2()
			{
				${3:// body..}
			}
		}
	}
# var
snippet var
	var ${1:name}:${2:Type} = new $2(${3});${4}
# Function
snippet function
	${1:public} function ${1:functionName}(${2:argument}):${3:void} 
	{
		${4:// body..}
	}
# Anonymous Function
snippet f
	function(${1}):${2:*}
	{
		${3}
	};
# if
snippet if
	if (${1:true})
	{
		${2}
	}
# if ... else
snippet ife
	if (${1:true})
	{
		${2}
	}
	else
	{
		${3}
	};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression})
	{
		case ${3:case}:
		{
			${4:// code}
			break;
		}
		default:
		{
			${2:// code}
		}
	}
# case
snippet case
	case ${1:case}:
	{
		${2:// code}
		break;
	}
# for (...) {...}
snippet for
	var ${1:n}:int = ${2:elements}.length;
	for (var ${3:i}:int = 0; $3 < $1; $3++)
	{
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	var ${1:n}:int = ${2:elements}.length;
	for (var ${3:i}:int = $1 - 1; $3 >= $1; $3++)
	{
		${4:$1[$2]}
	};
# for each
snippet foreach
	for each(var ${1:value}:${2:Type} in ${3:elements})
	{
		${4:$1}
	}
# for in
snippet forin
	for (var ${1:index}:${2:IndexType} in ${3:object})
	{
		var value:* =${4:$3[$1]}
	}
# while (...) {...}
snippet wh
	while (${1:/* condition */}) 
	{
		${2:/* code */}
	}
# do...while
snippet do
	do 
	{
		${2:/* code */}
	}
	while (${1:/* condition */});
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
# addEventListener
snippet add
	addEventListener( ${1:Event}, ${2:function} );
